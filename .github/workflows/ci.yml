name: Cargo Build & Test

on:
  push:
    branches: ["main"]
    paths:
      - "**.rs"
      - test_data/**
      - "**/Cargo.toml"
      - .github/workflows/**
  pull_request:

permissions:
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  code_style_checking:
    name: Code Style Checking
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        run: |
          rustup update stable \
            && rustup default stable
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Cargo Fmt
        run: cargo fmt --check
      - name: Clippy
        run: cargo clippy
     
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: code_style_checking
    steps:
      - name: Setup Rust
        run: |
          rustup update stable \
            && rustup default stable \
            && rustup component add llvm-tools-preview
      - name: Setup Build Tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov,cargo-nextest
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: corretto
      - uses: actions/checkout@v4
        name: Checkout source code
      - run: cargo check --all-features --verbose
        name: Cargo check
      - name: Test
        run: |
          cargo llvm-cov nextest \
                --all-features \
                --codecov \
                --output-path ./target/codecov.json
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: target/codecov.json

  publish_latest_docs:
    name: Rust Doc
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Setup Rust
        run: |
          rustup update nightly \
            && rustup default nightly
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Build docs
        env:
          RUSTDOCFLAGS: --cfg unstable
        run: cargo doc --all-features --no-deps --verbose
      - name: Fix file permissions
        run: |
          chmod -v -R +rX "target/doc/" | while read line; do
            echo "::info title=Fixed file permissions::$line"
          done
      - uses: actions/upload-pages-artifact@v3
        name: Upload docs as github pages artifact
        with:
          path: target/doc
      - uses: actions/deploy-pages@v4
        name: Deploy docs to github pages
