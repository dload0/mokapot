name: Cargo Build & Test

on:
  push:
    branches: ["main"]
    paths:
      - "**.rs"
      - test_data/**
      - "**/Cargo.toml"
      - .github/workflows/**
    tags:
      - v**
  pull_request:

permissions:
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  code_style_checking:
    name: Code Style Checking
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        run: |
          rustup update stable \
            && rustup default stable
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Cargo Fmt
        run: cargo fmt --check
      - name: Clippy
        run: cargo clippy

  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: code_style_checking
    steps:
      - name: Setup Rust
        run: |
          rustup update stable \
            && rustup default stable \
            && rustup component add llvm-tools-preview
      - name: Setup Build Tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov,cargo-nextest
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Cargo Update
        run: cargo update --verbose
      - name: Cache Rust Build Stuff
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - run: cargo check --all-features --verbose
        name: Cargo check
      - name: Test
        run: |
          cargo llvm-cov nextest \
                --all-features \
                --codecov \
                --output-path ./target/codecov.json
      - name: Upload Coverage Data
        uses: actions/upload-artifact@v4
        with:
          name: codecov.json
          path: ./target/codecov.json

  codecov:
    name: Upload Coverage to CodeCov
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Download Coverage Data
        uses: actions/download-artifact@v4
        with:
          name: codecov.json
      - name: Upload to codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: codecov.json
          fail_ci_if_error: true

  build_doc:
    name: Generate Rust Doc
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Setup Rust
        run: |
          rustup update nightly \
            && rustup default nightly
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Build docs
        env:
          RUSTDOCFLAGS: --cfg unstable
        run: cargo doc --all-features --no-deps --verbose
      - name: Fix file permissions
        run: |
          chmod -v -R +rX "target/doc/" | while read line; do
            echo "::info title=Fixed file permissions::$line"
          done
      - uses: actions/upload-pages-artifact@v3
        name: Upload docs as github pages artifact
        with:
          name: mokapot-docs
          path: target/doc

  publish_latest_docs:
    name: Publish Rustdoc to GitHub Pages
    runs-on: ubuntu-latest
    needs: build_doc
    steps:
      - uses: actions/deploy-pages@v4
        name: Deploy docs to github pages
        with:
          artifact_name: mokapot-docs

  publish_to_crate_io:
    name: Publish to crate.io
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - build_and_test
      - build_doc
    steps:
      - name: Setup Rust
        run: rustup update && rustup default
      - name: Cargo Update
        run: cargo update --verbose
      - name: Cache Rust Build Stuff
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: Publish to crates.io
        run: cargo publish --all-features --verbose
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
