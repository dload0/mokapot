pub mod class {
    /// Declared `public`; may be accessed from outside its package.
    pub const ACC_PUBLIC: u16 = 0x0001;
    /// Declared `final`; no subclasses allowed.
    pub const ACC_FINAL: u16 = 0x0010;
    /// Treat superclass methods specially when invoked by the invokespecial instruction.
    pub const ACC_SUPER: u16 = 0x0020;
    /// Is an interface, not a class.
    pub const ACC_INTERFACE: u16 = 0x0200;
    /// Declared `abstract`; must not be instantiated.
    pub const ACC_ABSTRACT: u16 = 0x0400;
    /// Declared synthetic; not present in the source code.
    pub const ACC_SYNTHETIC: u16 = 0x1000;
    /// Declared as an annotation interface.
    pub const ACC_ANNOTATION: u16 = 0x2000;
    /// Declared as an enum class.
    pub const ACC_ENUM: u16 = 0x4000;
    /// Is a module, not a class or interface.
    pub const ACC_MODULE: u16 = 0x8000;
}

pub mod field {
    /// Declared `public`; may be accessed from outside its package.
    pub const ACC_PUBLIC: u16 = 0x0001;
    /// Declared `private`; accessible only within the defining class and other classes belonging to the same nest.
    pub const ACC_PRIVATE: u16 = 0x0002;
    /// Declared `protected`; may be accessed within subclasses.
    pub const ACC_PROTECTED: u16 = 0x0004;
    /// Declared `static`.
    pub const ACC_STATIC: u16 = 0x0008;
    /// Declared `final`; never directly assigned to after object construction.
    pub const ACC_FINAL: u16 = 0x0010;
    /// Declared `volatile`; cannot be cached.
    pub const ACC_VOLATILE: u16 = 0x0040;
    /// Declared `transient`; not written or read by a persistent object manager.
    pub const ACC_TRANSIENT: u16 = 0x0080;
    /// Declared synthetic; not present in the source code.
    pub const ACC_SYNTHETIC: u16 = 0x1000;
    /// Declared as an element of an `enum` class.
    pub const ACC_ENUM: u16 = 0x4000;
}

pub mod method {
    /// Declared `public`; may be accessed from outside its package.
    pub const ACC_PUBLIC: u16 = 0x0001;
    /// Declared `private`; accessible only within the defining class and other classes belonging to the same nest.
    pub const ACC_PRIVATE: u16 = 0x0002;
    /// Declared `protected`; may be accessed within subclasses.
    pub const ACC_PROTECTED: u16 = 0x0004;
    /// Declared `static`.
    pub const ACC_STATIC: u16 = 0x0008;
    /// Declared `final`; must not be overridden.
    pub const ACC_FINAL: u16 = 0x0010;
    /// Declared `synchronized`; invocation is wrapped by a monitor use.
    pub const ACC_SYNCHRONIZED: u16 = 0x0020;
    /// A bridge method, generated by the compiler.
    pub const ACC_BRIDGE: u16 = 0x0040;
    /// Declared with variable number of arguments.
    pub const ACC_VARARGS: u16 = 0x0080;
    /// Declared `native`; implemented in a language other than Java.
    pub const ACC_NATIVE: u16 = 0x0100;
    /// Declared `abstract`; no implementation is provided.
    pub const ACC_ABSTRACT: u16 = 0x0400;
    /// In a `class` file whose major version is at least 46 and at most 60; Declared `strictfp`.
    pub const ACC_STRICT: u16 = 0x0800;
    /// Declared synthetic; not present in the source code.
    pub const ACC_SYNTHETIC: u16 = 0x1000;
}
